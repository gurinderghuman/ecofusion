steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      docker build -t gcr.io/$PROJECT_ID/ecofusion-website:$$(echo ${_REPO_NAME:--}-${_COMMIT_MESSAGE:--}-${SHORT_SHA} | sed 's/[^a-zA-Z0-9._-]/-/g') .

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      docker push gcr.io/$PROJECT_ID/ecofusion-website:$$(echo ${_REPO_NAME:--}-${_COMMIT_MESSAGE:--}-${SHORT_SHA} | sed 's/[^a-zA-Z0-9._-]/-/g')

  # Update the image name in deployment.yaml
  - name: 'gcr.io/cloud-builders/sed'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      sed -i "s|gcr.io/\\$$PROJECT_ID/ecofusion-website:.*|gcr.io/$PROJECT_ID/ecofusion-website:$$(echo ${_REPO_NAME:--}-${_COMMIT_MESSAGE:--}-${SHORT_SHA} | sed 's/[^a-zA-Z0-9._-]/-/g')|g" deployment.yaml

  # Print the contents of deployment.yaml
  - name: 'gcr.io/cloud-builders/cat'
    args: ['deployment.yaml']

  # Apply the updated deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=ecofusion-cluster'

  # Apply the service (if it exists)
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=ecofusion-cluster'

images:
  - 'gcr.io/$PROJECT_ID/ecofusion-website:${_REPO_NAME:--}-${_COMMIT_MESSAGE:--}-${SHORT_SHA}'

options:
  logging: CLOUD_LOGGING_ONLY