steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/portfolio-ghuman/ecofusion-repo/ecofusion:v1-$SHORT_SHA', '.']

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/portfolio-ghuman/ecofusion-repo/ecofusion:v1-$SHORT_SHA']

  # Get GKE credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'autopilot-cluster-1'
      - '--zone'
      - 'us-central1-a'
      - '--project'
      - 'portfolio-ghuman'

  # Update the deployment to use the new image
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/ecofusion-deployment'
      - 'ecofusion-app=us-central1-docker.pkg.dev/portfolio-ghuman/ecofusion-repo/ecofusion:v1-$SHORT_SHA'

  # Apply any changes to the deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'deployment.yaml']

  # Apply any changes to the service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'service.yaml']

  # Force redeployment to clear pod-level cache
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - 'rollout'
    - 'restart'
    - 'deployment/ecofusion-deployment'

  # Wait for rollout to complete
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - 'rollout'
    - 'status'
    - 'deployment/ecofusion-deployment'
    - '--timeout=600s'

images:
  - 'us-central1-docker.pkg.dev/portfolio-ghuman/ecofusion-repo/ecofusion:v1-$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY